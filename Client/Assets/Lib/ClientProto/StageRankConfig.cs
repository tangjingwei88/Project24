//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: StageRankConfig.proto
namespace m
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"StageRankConfig")]
  public partial class StageRankConfig : global::ProtoBuf.IExtensible
  {
    public StageRankConfig() {}
    
    private int _RankID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"RankID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int RankID
    {
      get { return _RankID; }
      set { _RankID = value; }
    }
    private string _Name;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"Name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Name
    {
      get { return _Name; }
      set { _Name = value; }
    }
    private string _Icon;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"Icon", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string Icon
    {
      get { return _Icon; }
      set { _Icon = value; }
    }
    private int _Time;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"Time", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Time
    {
      get { return _Time; }
      set { _Time = value; }
    }
    private int _Level;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"Level", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Level
    {
      get { return _Level; }
      set { _Level = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}